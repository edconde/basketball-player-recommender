"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Player = void 0;
const mongoose = require("mongoose");
/**
 * Esquema de la entidad player en base de datos
 */
const PlayerSchema = new mongoose.Schema({
    'Name': { type: String, required: true, unique: true },
    'Team': { type: String, required: true },
    'Position': { type: String, required: true },
    'Overall': { type: Number },
    'Outside Scoring': { type: Number },
    'Close Shot': { type: Number },
    'Mid-Range Shot': { type: Number },
    'Three-Point Shot': { type: Number },
    'Free Throw': { type: Number },
    'Shot IQ': { type: Number },
    'Offensive Consistency': { type: Number },
    'Athleticism': { type: Number },
    'Speed': { type: Number },
    'Acceleration': { type: Number },
    'Strength': { type: Number },
    'Vertical': { type: Number },
    'Stamina': { type: Number },
    'Hustle': { type: Number },
    'Overall Durability': { type: Number },
    'Inside Scoring': { type: Number },
    'Layup': { type: Number },
    'Standing Dunk': { type: Number },
    'Driving Dunk': { type: Number },
    'Post Hook': { type: Number },
    'Post Fade': { type: Number },
    'Post Control': { type: Number },
    'Draw Foul': { type: Number },
    'Hands': { type: Number },
    'Playmaking': { type: Number },
    'Pass Accuracy': { type: Number },
    'Ball Handle': { type: Number },
    'Speed with Ball': { type: Number },
    'Pass IQ': { type: Number },
    'Pass Vision': { type: Number },
    'Defending': { type: Number },
    'Interior Defense': { type: Number },
    'Perimeter Defense': { type: Number },
    'Steal': { type: Number },
    'Block': { type: Number },
    'Lateral Quickness': { type: Number },
    'Help Defense IQ': { type: Number },
    'Pass Perception': { type: Number },
    'Defensive Consistency': { type: Number },
    'Rebounding': { type: Number },
    'Offensive Rebound': { type: Number },
    'Defensive Rebound': { type: Number },
    'Intangibles': { type: Number },
    'Potential': { type: Number },
    'Total Attributes': { type: Number },
    'Pertenencia Cluster 0': { type: Number },
    'Pertenencia Cluster 1': { type: Number },
    'Pertenencia Cluster 2': { type: Number },
    'Pertenencia Cluster 3': { type: Number },
    'Basketball Reference Player Id': { type: String, required: true },
    'Plus/Minus PG Cluster 0': { type: Number },
    'Shared Time PG Cluster 0': { type: Number },
    'Compatibilidad PG Cluster 0': { type: Number },
    'Plus/Minus PG Cluster 1': { type: Number },
    'Shared Time PG Cluster 1': { type: Number },
    'Compatibilidad PG Cluster 1': { type: Number },
    'Plus/Minus PG Cluster 2': { type: Number },
    'Shared Time PG Cluster 2': { type: Number },
    'Compatibilidad PG Cluster 2': { type: Number },
    'Plus/Minus PG Cluster 3': { type: Number },
    'Shared Time PG Cluster 3': { type: Number },
    'Compatibilidad PG Cluster 3': { type: Number },
    'Plus/Minus SG Cluster 0': { type: Number },
    'Shared Time SG Cluster 0': { type: Number },
    'Compatibilidad SG Cluster 0': { type: Number },
    'Plus/Minus SG Cluster 1': { type: Number },
    'Shared Time SG Cluster 1': { type: Number },
    'Compatibilidad SG Cluster 1': { type: Number },
    'Plus/Minus SG Cluster 2': { type: Number },
    'Shared Time SG Cluster 2': { type: Number },
    'Compatibilidad SG Cluster 2': { type: Number },
    'Plus/Minus SG Cluster 3': { type: Number },
    'Shared Time SG Cluster 3': { type: Number },
    'Compatibilidad SG Cluster 3': { type: Number },
    'Plus/Minus SF Cluster 0': { type: Number },
    'Shared Time SF Cluster 0': { type: Number },
    'Compatibilidad SF Cluster 0': { type: Number },
    'Plus/Minus SF Cluster 1': { type: Number },
    'Shared Time SF Cluster 1': { type: Number },
    'Compatibilidad SF Cluster 1': { type: Number },
    'Plus/Minus SF Cluster 2': { type: Number },
    'Shared Time SF Cluster 2': { type: Number },
    'Compatibilidad SF Cluster 2': { type: Number },
    'Plus/Minus SF Cluster 3': { type: Number },
    'Shared Time SF Cluster 3': { type: Number },
    'Compatibilidad SF Cluster 3': { type: Number },
    'Plus/Minus PF Cluster 0': { type: Number },
    'Shared Time PF Cluster 0': { type: Number },
    'Compatibilidad PF Cluster 0': { type: Number },
    'Plus/Minus PF Cluster 1': { type: Number },
    'Shared Time PF Cluster 1': { type: Number },
    'Compatibilidad PF Cluster 1': { type: Number },
    'Plus/Minus PF Cluster 2': { type: Number },
    'Shared Time PF Cluster 2': { type: Number },
    'Compatibilidad PF Cluster 2': { type: Number },
    'Plus/Minus PF Cluster 3': { type: Number },
    'Shared Time PF Cluster 3': { type: Number },
    'Compatibilidad PF Cluster 3': { type: Number },
    'Plus/Minus C Cluster 0': { type: Number },
    'Shared Time C Cluster 0': { type: Number },
    'Compatibilidad C Cluster 0': { type: Number },
    'Plus/Minus C Cluster 1': { type: Number },
    'Shared Time C Cluster 1': { type: Number },
    'Compatibilidad C Cluster 1': { type: Number },
    'Plus/Minus C Cluster 2': { type: Number },
    'Shared Time C Cluster 2': { type: Number },
    'Compatibilidad C Cluster 2': { type: Number },
    'Plus/Minus C Cluster 3': { type: Number },
    'Shared Time C Cluster 3': { type: Number },
    'Compatibilidad C Cluster 3': { type: Number },
    'ImgUrl': { type: String },
});
// Exportar el modelo Player (se aplica el esquema PlayerSchema sobre la interfaz IPlayer)
const Player = mongoose.model('Player', PlayerSchema, 'players');
exports.Player = Player;
//# sourceMappingURL=player.model.js.map